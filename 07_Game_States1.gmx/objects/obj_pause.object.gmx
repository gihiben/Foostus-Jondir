<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sprite = -1;
paused = false;

/* Uncomment this for Standard/Free version
len = 0;
pause_list = -1;
/////////////////////////////////////////////*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if paused
{
// Comment out this for Standard/Free users as it is PRO only
if sprite_exists(sprite)
    {
    draw_sprite(sprite, 0, 0,  0);
    }
/////////////////////////////////////////////
/* Uncomment this for Standard/Free users
for (var i = 0; i &lt; len; i++;)
    {
    ii = ds_list_find_value(pause_list, i);
    if ii.sprite_index != -1
        {
        draw_sprite_ext(ii.sprite_index, ii.image_index, ii.x, ii.y, ii.image_xscale, ii.image_yscale, ii.image_angle, ii.image_blend, ii.image_alpha);
        }
    }
/////////////////////////////////////////////*/
draw_set_alpha(0.25);
draw_rectangle_colour(0, 0, room_width, room_height, c_white, c_white, c_white, c_white, false);
draw_set_alpha(1);
draw_sprite(spr_pause, 0, room_width / 2, room_height / 2);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>paused = !paused;
if paused
{
/* Uncomment this for Standard/Free users
pause_list = ds_list_create();
len = instance_count;
ds_list_clear(pause_list);
for (var i = 0; i &lt; len; i++;)
    {
    ds_list_add(pause_list, instance_id[i]);
    }
/////////////////////////////////////////////*/
// Comment out this for Standard/Free users as it is PRO only
sprite = sprite_create_from_surface(application_surface, 0, 0, room_width, room_height, false, false, 0, 0);
/////////////////////////////////////////////
instance_deactivate_all(true);
}
else
{
instance_activate_all();
// Comment out this for Standard/Free users as it is PRO only
if sprite_exists(sprite)
    {
    sprite_delete(sprite);
    } 
/////////////////////////////////////////////
/* Uncomment this for Standard/Free users
ds_list_destroy(pause_list);
/////////////////////////////////////////////*/

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
